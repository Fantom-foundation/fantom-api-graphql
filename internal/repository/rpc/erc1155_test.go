package rpc

import (
	"encoding/hex"
	"github.com/onsi/gomega"
	"math/big"
	"testing"
)

func TestErc1155ParseTransferBatchData(t *testing.T) {
	g := gomega.NewWithT(t)

	// data from testnet transaction 0x67dd7dd5cc74f89ff2fd2849eb279514c47bf7c2e21f44ad46cf48b0d32c254e
	data, err := hex.DecodeString("000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000f")
	g.Expect(err).To(gomega.BeNil())

	ids, values, err := Erc1155ParseTransferBatchData(data)

	g.Expect(err).To(gomega.BeNil())
	g.Expect(ids).To(gomega.HaveLen(3))
	g.Expect(values).To(gomega.HaveLen(3))
	g.Expect(ids[0]).To(gomega.Equal(big.NewInt(1)))
	g.Expect(ids[1]).To(gomega.Equal(big.NewInt(2)))
	g.Expect(ids[2]).To(gomega.Equal(big.NewInt(3)))
	g.Expect(values[0]).To(gomega.Equal(big.NewInt(5)))
	g.Expect(values[1]).To(gomega.Equal(big.NewInt(10)))
	g.Expect(values[2]).To(gomega.Equal(big.NewInt(15)))
}
